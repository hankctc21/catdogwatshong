<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" xmlns:th="http://www.thymeleaf.org"
	xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
<title>Insert title here</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<script
src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="/script/main.js"></script>
<link rel="stylesheet" href="/css/header.css">
<link rel="stylesheet" href="/css/main.css">
<link rel="stylesheet" href="/css/nav.css">
<!-- main.js 내부에 두면 sec:authorize를 이해못하는 자바스크립트에 의해 무조건 실행되버린다 -->
<script sec:authorize="isAuthenticated()" src="/script/websocket.js"></script>
<style>
	#left {
		float: left;
		width: 500px;
		margin-left: 100px;
	}
	#right {
		float: right;
		width: 256px;
		margin-right: 100px;
	}
	#section {
		overflow: hidden;			/* float를 clear하는 방법   */
	}
	
	.count {
		width: 35px;
		height: 35px;
		line-height: 35px;
		display: inline-block;
		text-align: center;
		font-size: 1.25em;
	}
	.plus, .minus, #plus, #minus {
		background-color: #ddd;		/* color를 16진수로 지정. 16진수로 지정할 때 #555555 -> #555로 줄여쓸 수 있다 */
		cursor: pointer;
	}
	
	#manufacturer, #name {
		font-size: 1.5em;
		font-weight: bold;
		color: #222;
	}
	
	#price {
		margin-top: 15px;
		font-size: 24px;
		color: rgb(107,144,220);	/* color를 10진수로 지정. rgb, rgba 두 가지.*/
		font-weight: 700;
		text-align: right;
	}
	
	#total_price {
		font-size: 1.75em;			/* em은 퍼센트(175%). %는 문서 원래 크기 기준. em은 부모 기준.*/ 
		font-weight: bold;
		color:rgb(233,96,97);
	}
	
	#order, #cart {
		width: 125px;
		height: 50px;
		line-height: 50px;
		text-align: center;
		color: white;
		font-weight: bold;
		
		/* 버튼을 커스터마이즈할 때 외곽선 */
		border: 0;
		outline: 0;
	}
	
	#order {
		background-color: #3fc910;
	}
	
	#cart {
		background-color: #565656;
	}
	
	  ul.list {
	list-style-type: none;
	margin: 0;
	padding: 0;
	border-bottom: 1px solid #ccc;
  }
  ul.list::after {
	content: '';
	display: block;
	clear: both;
  }
  .tab-button {
	display: block;
	padding: 10px 20px 10px 20px;
	float: left;
	margin-right: -1px;
	margin-bottom: -1px;
	color: grey;
	text-decoration: none;
	cursor: pointer;
  }
  .active {
	border-top: 2px solid orange;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid white;
	border-left: 1px solid #ccc;
	color: black;
	margin-top: -2px;
  }
  .tab-content {
	display: none;
	padding: 10px;
  }
  .show {
	display: block;
  }
	
 .mt-5 {
  height: 400px;
 }
</style>
<script>
	const pno = location.search.substr(5);
	// ajax 실행 결과를 저장할 변수 -> 이 변수를 사용하는 함수는 모두 done 또는 success 이후 호출해야 한다
	let product = undefined;
	
	// 상품을 선택하는 경우 -> 상품 개수와 전체 가격 출력
	function printCartWithoutOption(cart) {
		$(".count.number").text(cart.count);
		$("#total_count").text(cart.count);
		$("#total_price").text(cart.cartPrice);
	}
	
	// 옵션을 선택하는 경우 
	function printCartWithOptions(cart) {
		console.log(cart);
		
		// 옵션들을 출력할 div를 선택한 다음 기존 내용을 비운다
		const $optionsDiv = $("#selected_options_div");
		$optionsDiv.empty();
		
		$.each(cart.cartItemList, function(idx, cartItem) {
			// 옵션 하나를 감싸는 div
			const $div = $("<div>").appendTo($optionsDiv);
			
			// 02. 맛있는 김치 볶음밥 도시락
			// - 2 +	6000원 X
			
			// 105라인 
			let optionString = cartItem.name + "_" + cartItem.info;
			$("<div>").text(optionString).css("margin-bottom","10px").appendTo($div);
			
			// 106라인의 div_left, div_right 두 div를 담을 div(overflow해야 한다)
			const $div_outer = $("<div>").css("overflow","hidden").appendTo($div);
			
			// 106라인. - 개수 + 름 담은 왼쪽 div
			const $div_left = $("<div>").css("border","1px solid #eee").css("width","107px").css("float","left").appendTo($div_outer);
			$("<div class='count minus'>").text("-").attr("data-option_no", cartItem.optionNo).appendTo($div_left);
			$("<div class='count number'>").text(cartItem.count).appendTo($div_left);
			$("<div class='count plus'>").text("+").attr("data-option_no", cartItem.optionNo).appendTo($div_left);
			
			// 106라인 오른쪽. 
			const $div_right = $("<div>").css("width","100px").css("height","30px").css("line-height","30px").css("float","right").appendTo($div_outer);
			$("<div>").text(cartItem.itemPrice).css("float","left").appendTo($div_right);
			$("<div class='option_delete'>").attr("data-option_no", cartItem.optionNo).css("cursor","pointer").css("float","right").text("X").appendTo($div_right);
			
			$("<hr>").appendTo($div);
		});
		
		$("#total_price").text(cart.cartPrice);
		$("#total_count").text(cart.count);
	}
	
	// 화면의 공통부분을 구성. 옵션 여부에 따라 위의 두 함수 중 하나를 호출한다
	
	
	
		const printProduct = ()=>{
		console.log(page.content);
		const $list = $("#list");
		// 서버가 보낸 board들은 page.content에 저장되어 있다
		for(c of page.content) {
			const $li = $("<li>").appendTo($list);
			const $figure = $("<figure>").appendTo($li);
			$("<img>").attr("src", "/upload/productimage/" + c.imageFileName).attr("class","prodImg").appendTo($figure);
			$('img').attr('id', c.pno+"_"+c.imageFileName);
			const $figcaption = $("<figcaption>").attr("class","content_css").appendTo($li);

		}
	};
	
	
	
	
	
	function printPage() {
		$("#image").attr("src", "/upload/productimage/" +product.imageFileName);
		console.log(product.imageFileName);
		$('img').attr('id', product.pno+"_"+product.imageFileName);
		$("#manufacturer").text(product.manufacturer);
		$("#name").text(product.name);
		$("#price span").text(product.price);
		if(product.options.length==0) {
			// 옵션이 없는 경우 서버에 임시 장바구니를 즉시 생성
			$("#product_div").css("display", "block");
			const param = { pno: product.pno}
			$.ajax({url: "/temp_cart", method: "post", data: param}).done(result => printCartWithoutOption(result));
			
		} else {
			$("#option_div").css("display", "block");
			const $select = $("#options_select");
			
			// 옵션에 대한 select 출력
			$("<option id='default'>").text("선택").prop("selected",true).prop("disabled",true).appendTo($select);
			$.each(product.options, function(idx, option) {
				let optionString = option.name + "_" + option.info + "(" + option.price + ")";
				$("<option>").text(optionString).attr("data-option_no", option.optionNo).attr("data-option_price",option.price).appendTo($select);
			});
			
			// 옵션이 있는 경우 -> 화면을 reload하면 기존에 선택한 옵션을 받아와서 다시 뿌린다
			$.ajax("/temp_cart?pno=" + product.pno).done(result=> {
				if(result!="")
					printCartWithOptions(result);
			});
		}
	}
	

	
	$(function() {
		$.ajax("/products/" + pno).done(result=> { 
			product = result;
			printPage();
		});
		
		
		
		// 옵션을 선택한 경우
		$("#options_select").on("change", function() {
			const $option = $("#options_select option:selected")
			const param = {pno: product.pno, optionNo: $option.attr("data-option_no")};
			$.ajax({url: "/temp_cart", method: "post", data: param}).done(result=>printCartWithOptions(result)).fail(()=>alert("이미 선택한 옵션입니다"));
			// 작업이 끝나면 다시 select의 기본 선택을 "선택"으로 바꿔놓자
			$("#options_select #default").prop("selected", true);
		});
		
		// 옵션이 없는 경우 상품 개수 증가/감소
		$("#plus").on("click", function() {
			$.ajax({url:"/temp_cart/increase", method: "patch", data: {pno:product.pno}})
				.done(result=>printCartWithoutOption(result));
		});
		$("#minus").on("click", function() {
			$.ajax({url:"/temp_cart/decrease", method: "patch", data: {pno:product.pno}})
				.done(result=>printCartWithoutOption(result));
		});
		
		// 옵션이 있는 경우 상품 개수 증가/감소
		$("#selected_options_div").on("click", ".plus", function() {
			$.ajax({url:"/temp_cart/option/increase", method: "patch", data: {pno:product.pno, optionNo: $(this).attr("data-option_no") }})
				.done(result=>printCartWithOptions(result));
		});
		$("#selected_options_div").on("click", ".minus", function() {
			$.ajax({url:"/temp_cart/option/decrease", method: "patch", data: {pno:product.pno, optionNo: $(this).attr("data-option_no") }})
				.done(result=>printCartWithOptions(result));
		});
		
		// 옵션을 삭제한 경우
		$("#selected_options_div").on("click", ".option_delete", function() {
			$.ajax({url:"/temp_cart/option", method: "delete", data: {pno:product.pno, optionNo: $(this).attr("data-option_no") }})
				.done(result=>printCartWithOptions(result));
		})
	});
	
	
	
	
</script>


</head>
<body>
	<div id="page">
		<header id="header" th:replace="/fragments/headerStore">
		</header>
	<nav id="nav" th:replace="/fragments/navStore">
	</nav>
		<div id="main">

			<section id="section">
				<div id="left">
					<img id="image" style="width:100%">
				</div>
				<div id="right">
					<div id="manufacturer"></div>
					<div id="name"></div>
					<div id="price"><span></span>원</div>
					
					<!-- 옵션이 없는 경우 바로 개수 선택 div -->
					<hr>
					<div style="display:none;" id="product_div">
						<div class='count' id='minus'>-</div>
						<div class='count number'></div>
						<div class='count' id='plus'>+</div>
					</div>
					
					<!-- 옵션이 있는 경우 화면 -->
					<div style="display:none;" id="option_div">
						<select id="options_select" class="form-control">
						</select>
					</div>
					<hr>
					
					<!-- select에서 선택한 옵션을 출력하는 부분 -->
					<div id="selected_options_div">
					</div>
						
					
					<div id="price_div" style="overflow:hidden;">
						<span style="font-weight:bold; font-size:1.25em;">총 금액</span>
						<div style="float:right;">
							<span style="color:#999">총 수량<span id="total_count"></span>개</span>
							<span><span id="total_price"></span>원</span>
						</div>
					</div>
					<hr>
					<div>
						<button id="order">구매하기</button>
						<button id="cart">장바구니</button>
					</div>
				</div>
			</section>
			
        <div class="container mt-5" >
          <ul class="list">
            <li class="tab-button" data-id="0">Products</li>
            <li class="tab-button active" data-id="1">Information</li>
            <li class="tab-button" data-id="2">Shipping</li>
          </ul>
        
          <div class="tab-content ">
            <p>상품설명입니다. Product</p>
          </div>
          <div class="tab-content">
            <p>상품정보입니다. Info</p>
          </div>
          <div class="tab-content">
            <p>배송정보입니다. Shipping</p>
          </div>
        </div>
		</div>
		<footer id="footer" th:replace="/fragments/footer">
		</footer>
	</div>
	<script type="text/javascript">
$('.list').click(function(e){
    // if(내가 실제 누른 요소가 버튼 0이면)
    // 탭0번째 열어주셈
    // if(e.target == document.querySelectorAll('.tab-button')[0]){
    //     탭열기(0);
    // } 
    openTab(e.target.dataset.id ) 
});


//jQuery 
$('.list').data('name','val');
$('.list').data('name')

function openTab (num) {
    $('.tab-button').removeClass('active');
    $('.tab-content').removeClass('show');
    $('.tab-button').eq(num).addClass('active');
    $('.tab-content').eq(num).addClass('show');
}

	

</script>
</body>
</html>